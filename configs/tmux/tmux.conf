# shell
set -g default-command $SHELL
set -g default-shell $SHELL
# start with window 1 (instead of 0)
set -g base-index 1
# renumber windows after closing
set -g renumber-windows on
# start with pane 1
set -g pane-base-index 1
# remove esc delay
set -sg escape-time 0
# history
set -g history-limit 10000
# use vi mode
setw -g mode-keys vi
set -g status-keys vi
unbind -T copy-mode-vi MouseDragEnd1Pane
# Clear selection on single click
bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection \; select-pane
# Make `y` copy the selected text, not exiting the copy mode. For copy-and-exit
# use ordinary `Enter`
# bind -T copy-mode-vi y send-keys -X copy-pipe  # Only copy, no cancel
bind -T copy-mode-vi v send -X begin-selection
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind Enter copy-mode
bind -n M-Enter copy-mode
# pleb/ipad mode
set -g mouse on
# focusing
set-option -g focus-events on
# change prefix to ctrl space
unbind C-b
set-option -g prefix C-space
bind-key C-space send-prefix
# switch back to marked pane with back-tick. Use leader m to mark a pane
bind \` switch-client -t'{marked}'
# swap windows left and right with angled brackets
bind -r ">" swap-window -d -t +1
bind -r "<" swap-window -d -t -1
# toggle between windows
bind Space last-window
# toggle beween sessions
bind-key C-Space switch-client -l
# splitting
unbind %
bind h split-window -v -c "#{pane_current_path}"
unbind '"'
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
# other random key-binding changes
bind x kill-pane
bind t set status


# bind a set-window-option synchronize-panes \; display-message "█▓░ synchronize"
# go left and right through your windows with alt j , alt k
bind -n M-h previous-window
bind -n M-l next-window
# use leader with vim motions to move between panes.
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R
# resize panes (you can also use the arrow keys, but this is better)
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-h resize-pane -L 1
bind -r C-l resize-pane -R 1

bind j choose-window 'join-pane -h -s "%%"'
bind J choose-window 'join-pane -s "%%"'
# leader r sources tmux
bind r source-file ${XDG_CONFIG_HOME}/tmux/tmux.conf \; display-message "~/.tmux.conf reloaded"
# reload config file
#This is a Windows specific hack
# bind-key -n MouseDown3Pane run "tmux set-buffer \"$(powershell.exe -command Get-Clipboard | tr -s '\r\n' ' ')\"; tmux paste-buffer"
# vi style text column select. Have to use ctrl q, because ctrl c means 'copy' on windows
bind-key -T copy-mode-vi C-q send-keys -X rectangle-toggle
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g @t-fzf-prompt '  '
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 1000000     # increase history size (from 2,000)
set -g renumber-windows on       # renumber all windows when any window is closed
set -g set-clipboard on          # use system clipboard
set -g status-position bottom       # macOS / darwin style
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'
# I've aliased browser to open chrome on windows
# set -g @fzf-url-open "browser"
set -g @fzf-url-open ""

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
  # for neovim
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'w3m nvim'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'catppuccin/tmux'
# set -g @thumbs-key F
# set -g @thumbs-command 'echo -n {} | clip.exe'
set -g @thumbs-command 'echo -n {} | pbcopy'
# I recommend using `o` if not already in use, for least key strokes when launching
set -g @sessionx-bind 'o'
set -g @sessionx-x-path '~/dotfiles'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-preview-enabled 'true'

# `C-x` is a customizeable, by default it indexes directories in `$HOME/.config`,
# but this can be changed by adding the config below.
# e.g. set -g @sessionx-x-path '~/dotfiles'
# set -g @sessionx-x-path '$HOME/.config/'


# By default, the current session will not be shown on first view
# This is to support quick switch of sessions
# Only after other actions (e.g. rename) will the current session appear
# Setting this option to 'false' changes this default behavior
set -g @sessionx-filter-current 'false'

# Window mode can be turned on so that the default layout
# Has all the windows listed rather than sessions only
set -g @sessionx-window-mode 'on'

# Tree mode can be enabled which means that instead of a preview,
# a hierarchy of sessions and windows will be shown
set -g @sessionx-tree-mode 'on'

# Preview location and screenspace can be adjusted with these
# Reminder: it can be toggeled on/off with `?`
set -g @sessionx-preview-location 'right'
set -g @sessionx-preview-ratio '55%'

# The preview can also be disabled altogether
set -g @sessionx-preview-enabled 'true'

# Change window dimensions
set -g @sessionx-window-height '90%'
set -g @sessionx-window-width '75%'

# If you want change the layout to top you can set
set -g @sessionx-layout 'reverse'

# If you want to change the prompt
# set -g @sessionx-prompt ''
# If you want to change the prompt, the space is nedded to not overlap the icon
# set -g @sessionx-prompt " "

# If you want to change the pointer
set -g @sessionx-pointer "▶ "

# When set to 'on' a non-result will be sent to zoxide for path matching
# Requires zoxide installed
set -g @sessionx-zoxide-mode 'on'

# If you're running fzf lower than 0.35.0 there are a few missing features
# Upgrade, or use this setting for support
# set -g @sessionx-legacy-fzf-support 'on'

# status format
set -g @catppuccin_status_background "default"
set -g @catppuccin_status_connect_separator "yes"

# window format
set -g @catppuccin_window_separator " "
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_middle_separator "█ "
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"

# window default format
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#{s|$USER|~|:#{b:pane_current_path}}"

# window current format
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{s|$HOME|~|:pane_current_path}"

# status modules list
set -g @catppuccin_status_modules_right "application session date_time"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"

# config for date_time module
set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M:%S"

# Primeagen cheat sheet script
bind-key -r i run-shell "tmux neww tmux-cht.sh"
# Attempting to fix automatic saving by adding continuum after the theme (https://github.com/tmux-plugins/tmux-continuum/issues/48)
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'ghostty'
set -g @continuum-save-interval '5'
set -g status-interval 60
WEATHER='#(curl -s wttr.in/Derby:\?format\="%%l:+%%c%%20%%t%%60%%w&period=60")'
# set -g status-right '#{ WEATHER } Continuum status: #{continuum_status}'
set -g status-right "#{?window_zoomed_flag,[Z],} | %H:%M %d-%b"

# set -g status-right "$WEATHER"
##### Display Popups ##### 

bind C-y display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "lazygit"
bind C-n display-popup -E 'bash -i -c "read -p \"Session name: \" name; tmux new-session -d -s \$name && tmux switch-client -t \$name"'
# bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
# bind C-p display-popup -E "ipython"
bind C-c display-popup \
  -w 80% \
  -h 80% \
  -E 'cmus'
bind C-f display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "yazi"
# bind C-z display-popup \
#   -w 80% \
#   -h 80% \
#   -E 'nvim ~/.bashrc'
# bind C-g display-popup -E "bash -i ~/.tmux/scripts/chat-popup.sh"
bind C-t display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "zsh"

##### Display Menu ##### 

bind d display-menu -T "#[align=centre]Dotfiles" -x C -y C \
  ".zshrc"            z  "display-popup -E 'nvim ~/.zshrc'" \
  ".tmux.conf"        t  "display-popup -E 'nvim ~/.tmux.conf'" \
  ".sketchybarrc"     s  "display-popup -d "~/.config/sketchybar" -E 'nvim ~/.config/sketchybar/sketchybarrc'" \
  "Exit"              q  ""

# bootstrap tpm
run '~/.tmux/plugins/tpm/tpm'
