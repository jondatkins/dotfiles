# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack Nerd Font 9
# font pango:Meslo LGM Nerd Font 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3
# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lockColor.sh --nofork
# exec xset s 10 15
# exec --no-startup-id xss-lock +resetsaver --transfer-sleep-lock -- i3LockColor.sh --nofork
# exec --no-startup-id xss-lock -l -- "/home/$USER/.config/scripts/lock" -n
# bindsym $mod+Control+l exec i3lock
# exec --no-startup-id lockWithXidleHook.sh
#
# time is in seconds, so 600 is 10 minutes, 1200 is 20 minutes.
exec --no-startup-id xidlehook \
--detect-sleep \
--not-when-audio \
--not-when-fullscreen \
--timer 1200 'xset dpms force standby' '' \
--timer 300 '/home/jon/dotfiles/configs/scripts/i3LockColor.sh' '' \
--timer 300 'systemctl suspend' ''

# /home/jon/dotfiles/configs/scripts/i3LockColor.sh
# Shortcut for Lockscreen
bindsym $mod+Ctrl+l exec "i3LockColor.sh"

# I now have as systemd service which should lock the screen with my lock script prior to sleep. suspend or hibernate
bindsym $mod+Ctrl+s exec --no-startup-id "i3LockColor.sh && systemctl suspend"

# bindsym $mod+Ctrl+h exec --no-startup-id "systemctl hibernate"

bindsym $mod+Ctrl+u exec --no-startup-id "systemctl reboot"

bindsym $mod+Ctrl+space exec --no-startup-id "dunstctl close"
bindsym $mod+Ctrl+shift+space exec --no-startup-id "dunstctl close-all"
bindsym $mod+Ctrl+shift+period exec --no-startup-id "dunstctl context"
bindsym $mod+Ctrl+p exec --no-startup-id "dunstctl history-pop"

# shutdown / restart / suspend...
# set $mode_system System  lock, () logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown

# bindsym $mod+BackSpace mode "$mode_system"

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id changevolume.sh up && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id changevolume.sh down && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id changevolume.sh mute && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# start a terminal
bindsym $mod+Return exec ghostty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# bindsym $mod+d exec --no-startup-id -show drun
# A more modern dmenu replacement is rofi:
bindsym $mod+space exec --no-startup-id rofi -show drun
bindsym $mod+p exec --no-startup-id powermenu.sh
# bindsym $mod+Ctrl+w exec --no-startup-id wifi.sh
bindsym $mod+x exec --no-startup-id switchWorkspace.sh
bindsym $mod+Ctrl+e exec --no-startup-id rofi -show emoji
bindsym $mod+c exec --no-startup-id rofi -show calc -modi calc -no-show-match -no-sort 
bindsym $mod+Ctrl+w exec --no-startup-id rofi -show window -theme ~/.config/rofi/config.rasi
bindsym $mod+Ctrl+r exec --no-startup-id rofi -show run -theme ~/.config/rofi/config.rasi
bindsym $mod+Ctrl+f exec --no-startup-id rofi -modi filebrowser -show filebrowser -theme ~/.config/rofi/config.rasi
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# The middle button over a titlebar kills the window
bindsym --release button2 kill

# The middle button and a modifier over any part of the window kills the window
bindsym --whole-window $mod+button2 kill

# The right button toggles floating
bindsym button3 floating toggle
bindsym $mod+button3 floating toggle

# The side buttons move the window around
bindsym button9 move left
bindsym button8 move right
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# icons from:
# https://fontawesome.com/v5/search
set $ws1 "1:   Terminal"
set $ws2 "2:   WorkWeb"
set $ws3 "3:   GenWeb"
set $ws4 "4:   Krita"
set $ws5 "5:   Gimp"
set $ws6 "6:   Music"
set $ws7 "7:   Files"
set $ws8 "8:   Bluetooth"
set $ws9 "9:   Games"
set $ws10 "10:   Art"

# set $ws1 "1: Terminal"
# set $ws2 "2: Firefox"
# set $ws3 "3: VMWare"
# set $ws4 "4: Spotify"
# set $ws5 "5: Shutter"

# workspace 1 is named '1' by default, the set command doesn't change this, so for it to display as you want
# you must use the i3-msg rename command
exec --no-startup-id i3-msg 'rename workspace 1 to $ws1'
exec --no-startup-id i3-msg 'rename workspace 10 to $ws10'


# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

workspace_auto_back_and_forth yes

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
# move focused window between monitors
bindsym $mod+Shift+greater move container to output right
bindsym $mod+Shift+less move container to output left

# https://i3wm.org/docs/userguide.html#workspace_screen
# Set workspaces to use my main monitor, except for one which uses the 
# graphics tablet / DVI-D-0.
workspace $ws1 output HDMI-0
workspace $ws2 output HDMI-0
workspace $ws3 output HDMI-0
workspace $ws4 output HDMI-0
workspace $ws5 output HDMI-0
workspace $ws6 output HDMI-0
workspace $ws7 output HDMI-0
workspace $ws8 output HDMI-0
workspace $ws9 output HDMI-0
workspace $ws10 output DVI-D-0
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Allocate applications to workspaces. Use 'xprop' to find class names
# for_window [class="kitty"] move to workspace $ws1
# for_window [class="firefox"] move to workspace $ws2
# for_window [class="krita"] move to workspace $ws4
# for_window [class="gimp"] move to workspace $ws5
# for_window [class="blueman-manager"] floating enable move to workspace $ws9
# resize window (you can also use the mouse for that) 
#
exec --no-startup-id  ghostty
exec --no-startup-id  firefox
# moves firefox to workspace 2
# for_window [class="firefox"] move to workspace $ws2
# Starts a firefox instance on workspace 2, then moves back to WS 1.
# exec_always --no-startup-id i3-msg 'workspace $ws2; exec firefox;workspace $ws1'

# assign [class="firefox"] → output right
# Start the GIMP
bindsym $mod+g exec gimp
# bindsym $mod+ctrl+k exec krita
bindsym $mod+b exec firefox

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         # status_command i3status
#         workspace_buttons yes
#         workspace_min_width 40
#         strip_workspace_numbers no
#         strip_workspace_name no
#         binding_mode_indicator yes
#         padding 2px
# }
# exec_always --no-startup-id xrandr --output HDMI-0 --primary --left-of DVI-D-0 --mode 1920x1080 --rate 60
exec_always --no-startup-id xrandr --output DVI-D-0 --mode 1920x1080 --pos 1920x0 --rotate right --output HDMI-0 --primary --mode 1920x1080 --pos 0x0 --rotate normal
# exec_always --no-startup-id xrandr --output HDMI-0 --primary DVI-D-0 --mode 1920x1080 --rate 60
# Use --rotate right to rotate the screen 90 degrees
# exec_always --no-startup-id xrandr --output DVI-D-0 --right-of HDMI-0 --mode 1920x1080 --rate 60 --rotate normal
# exec_always --no-startup-id xrandr --output DVI-D-0 --right-of HDMI-0 --mode 1920x1080 --rate 60
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always --no-startup-id feh --bg-fill ~/Pictures/Wallpapers/breno-machado-in9-n0JwgZ0-unsplash.jpg
# Transparency with picom compositor
# exec_always picom -f
exec_always --no-startup-id picom
# configure wacom 13 tablet so that stylus is mapped to output correctly
# Below config puts tablet underneath the main monitor
# exec_always --no-startup-id xsetwacom set "Wacom One Pen Display 13 Pen stylus" MapToOutput 1920x1080+0+1080
# exec_always --no-startup-id xsetwacom set "Wacom One Pen Display 13 Pen stylus" MapToOutput DVI-D-0
# This config puts the tablet to the right of the main monitor.
# exec_always --no-startup-id xsetwacom set "Wacom One Pen Display 13 Pen stylus" MapToOutput 1920x1080+1920+0 
exec_always --no-startup-id dunst
# exec_always --no-startup-id xidlehook --not-when-audio --not-when-fullscreen --detect-sleep --timer 100 "light -S 40" "light -I" --timer 120 "$LOCK_COMMAND" "light -I" --timer 1000 "systemctl suspend" "light -I"

# exec --no-startup-id xautolock -time 15 -locker 'systemctl suspend' -notify 600 -notifier "notify-send -u critical -t 10000 -- 'System going to sleep'" -corners '++--'
# exec locker
exec_always --no-startup-id udiskie
exec_always --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id dropbox
# mount google drive
# exec_always mount-drive /usr/bin/mount-drive
# exec_always nvidia-settings --load-config-only
exec_always sudo timedatectl set-ntp true

set $rosewater #f5e0dc
set $flamingo  #f2cdcd
set $pink      #f5c2e7
set $mauve     #cba6f7
set $red       #f38ba8
set $maroon    #eba0ac
set $peach     #fab387
set $yellow    #f9e2af
set $green     #a6e3a1
set $teal      #94e2d5
set $sky       #89dceb
set $sapphire  #74c7ec
set $blue      #89b4fa
set $lavender  #b4befe
set $text      #cdd6f4
set $subtext1  #bac2de
set $subtext0  #a6adc8
set $overlay2  #9399b2
set $overlay1  #7f849c
set $overlay0  #6c7086
set $surface2  #585b70
set $surface1  #45475a
set $surface0  #313244
set $base      #1e1e2e
set $mantle    #181825
set $crust     #11111b

# target                 title     bg    text      indicator    border
client.focused           $mantle   $mauve $mantle  $rosewater $mauve
client.focused_inactive  $overlay0 $base  $text    $rosewater $overlay0
client.unfocused         $overlay0 $base  $text    $rosewater $overlay0
client.urgent            $peach    $base  $peach   $overlay0  $peach
client.placeholder       $overlay0 $base  $text    $overlay0  $overlay0
client.background        $base
